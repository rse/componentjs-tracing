include('start.frag')

include('constraintset.frag')

constraint
  = _ "temporal-constraint" _ id:id _ "{" _ body:constraintBody _ "}" _ { return { type: 'temporal-constraint', id: id, constraintBody: body } }

constraintBody
  = rat:rationale seq:sequence filters:filter+ link:link { var obj = { rationale: rat, sequence: seq, link: link, filters: filters }; return obj }

sequence
  = _ "sequence" _ "{" _ first:id ids:(_ "<<" _ id)* _ "}" _ { var ary = [first]; for(var i = 0; i < ids.length; i++) { ary.push(ids[i][ids[i].length - 1]) }; return ary }

include('expr.frag')

filter
  = _ "filter" _ id:id _ "{" _ ex:expr _ "}" _ { return { id:id, condition: ex } }

link
  = _ "link" _ "{" _ ex:expr _ "}" _ { return { condition: ex } }

include('term.frag')

include('rationale.frag')

id
  = id:([a-zA-Z][a-zA-Z0-9-_]*) { if (id.length > 1) { return id[0]+id[1].join('') } else { return id } }

include('whitespaces.frag')